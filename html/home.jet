<!doctype html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport"
          content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Home</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta1/dist/css/bootstrap.min.css" rel="stylesheet"
          integrity="sha384-giJF6kkoqNQ00vy+HMDP7azOuL0xtbfIcaT9wjKHr8RbDVddVHyTfAAsrekwKmP1" crossorigin="anonymous">
    <link rel="stylesheet" type="text/css" href="https://unpkg.com/notie/dist/notie.min.css">
    <style>
        .chatbox {
            outline: 1px solid silver;
            min-height: 160px;
            padding: 0.5em;
        }
    </style>
</head>
<body>
<div class="container">
    <div class="row">
        <div class="col">
            <h1 class="mt-3">This is the home page</h1>
            <hr>
        </div>
    </div>
    <div class="row">
        <div class="col-md-8">
            <h3>Chat</h3>
            <p><a href="https://github.com/gitnoober">Github</a></p>
            <div class="form-group">
                <label for="username">Username:</label>
                <input type="text" name="username" id="username" class="form-control" autocomplete="off">
            </div>

            <div class="form-group">
                <label for="message">Message:</label>
                <input type="text" name="message" id="message" class="form-control" autocomplete="off">
            </div>

            <hr>
            <a href="javascript:void(0);" class="btn btn-outline-secondary" id="sendBtn">Send Message</a>

            <input type="hidden" name="action" id="action">

            <div id="status" class="mt-2 float-end">

            </div>

            <div id="output" class="chatbox mt-3">

            </div>

        </div>
        <div class="col-md-4">
            <h3>Who's Online</h3>
            <ul id="online_users">
            </ul>

        </div>
    </div>
</div>
<script src="https://unpkg.com/notie"></script>
</body>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta1/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-ygbV9kiqUc6oa4msXn9868pTtWMgiQaeYH7/t7LECLbyPA2x65Kgf80OJFdroafW"
        crossorigin="anonymous"></script>
<script src="/static/reconnecting-websockets.min.js" type="text/javascript"></script>

<script>
    let socket = null;
    let chatBoxElement = document.getElementById("output");
    let userField = document.getElementById("username");
    let messageField = document.getElementById("message");

    window.onbeforeunload = function () {
        console.log("Leaving");
        let jsonData = {};
        jsonData.action = "left";
        socket.send(JSON.stringify(jsonData));
    }

    document.addEventListener("DOMContentLoaded", function () {
        socket = new ReconnectingWebSocket("ws://127.0.0.1:8080/ws", null, {debug: true, reconnectInterval: 3000});
        const offline = `<span class="badge bg-danger">Not Connected :/</span>`
        const online = `<span class="badge bg-success">Connected </span>`
        const error = `<span class="badge bg-danger">Oops, please reconnect after some time!</span>`
        let statusElement = document.getElementById("status");

        socket.onopen = () => {
            console.log("Successfully connected");
            statusElement.innerHTML = online;
        }

        socket.onclose = () => {
            console.log("connection closed");
            statusElement.innerHTML = offline;
        }

        socket.onerror = error => {
            console.log("there was an error");
            statusElement.innerHTML = error;
        }

        socket.onmessage = msg => {

            let data = JSON.parse(msg.data);
            console.log("Action is", data.action);

            switch (data.action) {
                case "list_users":
                    let ul = document.getElementById("online_users");
                    while (ul.firstChild) ul.removeChild(ul.firstChild);

                    if (data.connected_users.length > 0) {
                        data.connected_users.forEach(function (item) {
                            let li = document.createElement("li");
                            li.appendChild(document.createTextNode(item));
                            ul.appendChild(li);
                        })
                    }
                    break;

                case "broadcast":
                    chatBoxElement.innerHTML += data.message + "<br>";

            }

        }

        userField.addEventListener("change", function (){
            let jsonData = {};
            jsonData["action"] = "username";
            jsonData["username"] = this.value;
            socket.send(JSON.stringify(jsonData));
        })


        messageField.addEventListener("keydown", function(event) {
            if(!socket){
                console.log("No connection");
                return false
            }
            if (event.code == "Enter"){
                if (userField.value == "" || messageField.value == ""){
                    notieError("Please enter username/message!");
                    return false
                }
                event.preventDefault();
                event.stopPropagation();
                sendMessage();
            }
        })

        document.getElementById("sendBtn").addEventListener("click", function(){
            if (userField.value == "" || messageField.value == ""){
                notieError("Please enter username/message!");
                return false
            }
            sendMessage();

        })
    })

    function sendMessage(){
        let jsonData = {};
        jsonData["action"] = "broadcast";
        jsonData["username"] = userField.value;
        jsonData["message"] = messageField.value;
        socket.send(JSON.stringify(jsonData));
        messageField.value = "";
    }

    function notieError(msg){
        notie.alert({
            type: 'error',
            text: msg,
        });
    }
</script>
</html>
